---
- name: Deploy and Configure NSX-T
  hosts: localhost
  gather_facts: False
  vars_files:
    - answerfile.yml
  tasks:
    - name: deploy NSX Managers OVA
      deploy_ova:
        ovftool_path: "{{ ovfToolPath }}"
        datacenter: "{{ item.value.dc }}"
        datastore: "{{ item.value.datastore }}"
        portgroup: "{{ item.value.portgroup }}"
        cluster: "{{ item.value.cluster }}"
        vmname: "{{ item.key }}"
        hostname: "{{ item.value.hostname }}"
        dns_server: "{{ dns_server }}"
        dns_domain: "{{ dns_domain }}"
        ntp_server: "{{ ntp_server }}"
        gateway: "{{ item.value.gw }}"
        ip_address: "{{ item.value.ip }}"
        netmask: "{{ item.value.mask }}"
        admin_password: "{{ item.value.password }}"
        cli_password: "{{ item.value.password }}"
        ssh_enabled: "{{ sshEnabled }}"
        allow_ssh_root_login: "{{ allowSSHRootAccess }}"
        path_to_ova: "{{ nsxOvaPath }}"
        ova_file: "{{ managerOva }}"
        vcenter: "{{ deployVcIPAddress }}"
        vcenter_user: "{{ deployVcUser }}"
        vcenter_passwd: "{{ deployVcPassword }}"
      with_dict: "{{ nsxmanagers }}"
      register: deploy_nsx_man
    - name: Wait 3 minutes before start configuration
      pause: minutes=3
    - debug: var=nsxmanagers['nsx-manager'].ip
    - name: NSX-T Compute Manager
      nsxt_compute_manager:
        display_name: "{{ compute_manager }}"
        server: "{{ deployVcIPAddress }}"
        username: "{{ deployVcUser }}"
        passwd: "{{ deployVcPassword }}"
        origin_type: "vCenter"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      register: cmp_manager


    - name: NSX-T Controller Cluster
      nsxt_controller_cluster:
        shared_secret: 'VMware1!'
        vc_id: "{{ cmp_manager.id }}"
        controllers: "{{ controllers }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      register: ctrl_cluster

    - name: NSX-T Transport Zone
      nsxt_transport_zone:
        display_name: "{{ item.key }}"
        description: "{{ item.value.description }}"
        host_switch_name: "{{ item.value.host_switch }}"
        transport_type: "{{ item. value.type }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      with_dict: "{{ transport_zones }}"
      register: tzone

    - name: NSX-T IP Pool
      nsxt_ip_pool:
        display_name: "{{ tep_pool_name }}"
        description: "IP Pool for GENEVE Overlay Traffic"
        subnets:
          - cidr: "{{ tep_pool_cidr }}"
            allocation_ranges:
              - "{{ tep_pool_range }}" 
            dns_nameservers:
              - "{{ tep_pool_nameserver }}" 
            dns_suffix: "{{ tep_pool_suffix }}"
            gateway_ip: "{{ tep_pool_gw }}"
        tags:
          "{{ tag_scope }}": "{{ tag }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      register: ippool

    - name: NSX-T IP Block
      nsxt_ip_block:
        display_name: "{{ item.key }}"
        description: "{{ item.value.description }}"
        cidr: "{{ item.value.cidr }}"
        tags:
          "{{ tag_scope }}": "{{ tag }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      with_dict: "{{ ipblocks }}"
      register: ipblock




    - name: NSX-T Edge Uplink Profile
      nsxt_uplink_profile:
        display_name: "{{ edge_uplink_profile_name }}"
        description: "Edge Uplink Profile"
        mtu: "{{ edge_uplink_profile_mtu }}"
        active_list:
          - uplink-1
        policy: "FAILOVER_ORDER"
        transport_vlan: "{{ edge_uplink_profile_vlan }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: edge_uplink_profile_name is defined
      register: edge_uplink_prof

    - name: NSX-T Host Uplink Profile
      nsxt_uplink_profile:
        display_name: "{{ esxi_uplink_profile_name }}"
        description: "Host Uplink Profile"
        mtu: "{{ esxi_uplink_profile_mtu }}"
        active_list:
          - uplink-1
          - uplink-2
        policy: "LOADBALANCE_SRCID"
        transport_vlan: "{{ esxi_uplink_profile_vlan }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: esxi_uplink_profile_name is defined
      register: edge_uplink_prof


    - name: NSX-T Compute Manager Cluster
      nsxt_cm_cluster:
        display_name: "{{ item.key }}"
        cm_name: "{{ compute_manager }}"
        auto_install_nsx: "{{ item.value.auto_install_nsx }}"
        create_transport_node: "{{ item.value.auto_create_transport_nodes }}"
        transport_zone_endpoints:
          - overlay_tz
        host_switch:
          - name: "nvds1"
            static_ip_pool_id: "{{ ippool.id }}"
            pnics: "{{ item.value.pnics }}"
            uplink_profile: "{{ esxi_uplink_profile_name }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      with_dict: "{{ cm_clusters }}"
      register: cmcluster


    - name: NSX-T Edge Node
      nsxt_edge_node:
        display_name: "{{ item.key }}"
        description: 'Edge Node created by Ansible'
        form_factor: "{{ item.value.form_factor }}"
        vsphere_cluster: "{{ item.value.cluster }}"
        data_network_ids:
          - "{{ item.value.portgroupTransport }}"
          - "{{ item.value.portgroupExt }}"
          - "{{ item.value.portgroupTransport }}"
        management_network_id: "{{ item.value.portgroup }}"
        management_port_subnet: "{{ item.value.ip }}"
        management_port_prefix: "{{ item.value.mask }}"
        default_gateway_addresses:
          - "{{ item.value.gw }}"
        hostname: "{{ item.value.hostname }}"
        storage_id: "{{ item.value.datastore }}"
        vc_id: "{{ cmp_manager.id }}"
        cli_password: "{{ item.value.cli_password }}"
        root_password: "{{ item.value.root_password }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      with_dict: "{{ nsxedges }}"
      async: 7200
      poll: 0
      register: edgefnode

    - name: Check if Edge Nodes are deployed
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ edgefnode.results }}"
      retries: 80

    - name: NSX-T Edge Transport Node
      nsxt_transport_node:
        display_name: "{{ item.key }}"
        node_name: "{{ item.key }}"
        transport_zone_endpoints: 
          - "overlay_tz"
          - "edge_uplink_vlan_tz"
        host_switch:
          - name: "nvds1"
            pnics:
              uplink-1: "{{ item.value.overlay_interface }}"
            uplink_profile: "{{ edge_uplink_profile_name }}"
            static_ip_pool_id: "{{ ippool.id }}"
          - name: "edge_uplink_nvds"
            pnics:
              uplink-1: "{{ item.value.uplink_interface }}"
            uplink_profile: "{{ edge_uplink_profile_name }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      with_dict: "{{ nsxedges }}"
      register: edgetnode

    - name: NSX-T Edge Cluster
      nsxt_edge_cluster:
        display_name: "{{ edge_cluster }}"
        description: "Default Edge Cluster"
        members:
          - edge1
          - edge2
        tags:
          "{{ tag_scope }}": "{{ tag }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: edge_cluster is defined
      register: edge_cluster


    - name: NSX-T T0 Logical Router
      nsxt_t0_logical_router:
        display_name: "{{ t0_name }}"
        description: "Default T0"
        edge_cluster_id: "{{ edge_cluster.id }}"
        high_availability_mode: "{{ t0_ha_mode }}"
        tags:
          "{{ tag_scope }}": "{{ tag }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_name is defined
      register: t0

    - name: NSX-T T1 Logical Router
      nsxt_t1_logical_router:
        display_name: "{{ t1_name }}"
        description: "Management T1"
        edge_cluster_id: "{{ edge_cluster.id }}"
        connected_t0_id: "{{ t0.id }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t1_name is defined
      register: t1

    - name: NSX-T VLAN Logical Switch for t0 uplink
      nsxt_logical_switch:
        display_name: "uplink-{{ t0_vlan_uplink }}"
        description: "T0 Uplink VLAN Logical Switch"
        transport_zone_name: edge_uplink_vlan_tz
        vlan: "{{ t0_vlan_uplink }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_vlan_uplink is defined
      register: uplink_ls

    - name: NSX-T Logical Switch Port for uplink1
      nsxt_logical_switch_port:
        display_name: "to_t0_uplink1"
        description: "Logical Switch Port"
        logical_switch_id: "{{ uplink_ls.id }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_vlan_uplink is defined
      register: uplink_lsp

    - name: NSX-T T0 Uplink 1
      nsxt_t0_uplink:
        display_name: "uplink-1"
        description: "My Test T0 Uplink"
        edge_cluster_member: "edge1"
        urpf: 'NONE'
        t0_router: "{{ t0_name }}"
        logical_switch_port_id: "{{ uplink_lsp.id }}"
        ip_address: "{{ t0_ip1 }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_vlan_uplink is defined
      register: t0uplink1

    - name: NSX-T Logical Switch Port for uplink2
      nsxt_logical_switch_port:
        display_name: "to_t0_uplink2"
        description: "Logical Switch Port"
        logical_switch_id: "{{ uplink_ls.id }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_vlan_uplink is defined
      register: uplink_lsp2

    - name: NSX-T T0 Uplink 2
      nsxt_t0_uplink:
        display_name: "uplink-2"
        description: "My Test T0 Uplink"
        edge_cluster_member: "edge2"
        urpf: 'NONE'
        t0_router: "{{ t0_name }}"
        logical_switch_port_id: "{{ uplink_lsp2.id }}"
        ip_address: "{{ t0_ip2 }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_vlan_uplink is defined
      register: t0uplink2

    - name: NSX-T T0 HA VIP
      nsxt_t0_ha_vip:
        vip_address: "{{ t0_vip}}"
        enabled: True
        t0_router: "{{ t0_name }}"
        redundant_uplink_port_ids:
          - "{{ t0uplink1.id }}"
          - "{{ t0uplink2.id }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t0_vlan_uplink is defined
      register: havip

    - name: NSX-T T0 Default Static route
      nsxt_static_route:
        network: '0.0.0.0/0'
        next_hops:
          - "{{ t0_gw }}"
        admin_distance: 1
        description: "Default Static Route"
        router_name: "{{ t0_name }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      register: stroute

    - name: NSX-T Logical Switch
      nsxt_logical_switch:
        display_name: "{{ ls_name }}"
        description: "Management Logical Switch"
        transport_zone_name: overlay_tz
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: ls_name is defined
      register: lsswitch

    - name: NSX-T Logical Switch Port
      nsxt_logical_switch_port:
        display_name: "LSPort"
        description: "Logical Switch Port"
        logical_switch_id: "{{ lsswitch.id }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: ls_name is defined
      register: lsp

    - name: NSX-T Logical Router Downlink Port
      nsxt_logical_router_downlink_port:
        display_name: "DwnPort"
        description: "Logical Router Downlink Port"
        logical_router_id: "{{ t1.id }}"
        linked_logical_switch_port_id: "{{ lsp.id }}"
        subnets:
           - ip_addresses: "{{ t1_ip }}"
             prefix_length: "{{ t1_mask }}"
        state: present
        nsx_manager: "{{ nsxmanagers['nsx-manager'].ip }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ nsxmanagers['nsx-manager'].password }}"
      when: t1_ip is defined
      register: lrdp
