---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: NSX-T Overlay Transport Zone
      nsxt_transport_zone:
        display_name: "{{ hostvars['localhost'].overlay_tz_name }}"
        description: "Ansible created TZ for Overlay Traffic"
        host_switch_name: "{{ hostvars['localhost'].hostswitch }}"
        transport_type: 'OVERLAY'
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: overlay_tzone

    - name: NSX-T VLAN Transport Zone
      nsxt_transport_zone:
        display_name: "{{ hostvars['localhost'].vlan_tz_name }}"
        description: "Ansible created TZ for VLAN Traffic"
        host_switch_name: "{{ hostvars['localhost'].hostswitch }}"
        transport_type: 'VLAN'
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: vlan_tzone

    - name: NSX-T VLAN Transport Zone for Edge Uplink
      nsxt_transport_zone:
        display_name: "{{ hostvars['localhost'].edge_vlan_tz_name }}"
        description: "Ansible created TZ for VLAN Traffic"
        host_switch_name: "{{ hostvars['localhost'].vlan_hostswitch }}"
        transport_type: 'VLAN'
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: edge_vlan_tzone

    - name: NSX-T IP Pool
      nsxt_ip_pool:
        display_name: "{{ hostvars['localhost'].tep_pool_name }}"
        description: "IP Pool for GENEVE Overlay Traffic"
        subnets:
          - cidr: "{{ hostvars['localhost'].tep_pool_cidr }}"
            allocation_ranges:
              - "{{ hostvars['localhost'].tep_pool_range }}" 
            dns_nameservers:
              - "{{ hostvars['localhost'].tep_pool_nameserver }}" 
            dns_suffix: "{{ hostvars['localhost'].tep_pool_suffix }}"
            gateway_ip: "{{ hostvars['localhost'].tep_pool_gw }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: ippool

    - name: NSX-T IP Block
      nsxt_ip_block:
        display_name: "{{ hostvars['localhost'].ip_block_name }}"
        description: "IP Block created by Ansible"
        cidr: "{{ hostvars['localhost'].ip_block_cidr }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: ipblock

    - name: NSX-T Edge Uplink Profile
      nsxt_uplink_profile:
        display_name: "{{ hostvars['localhost'].edge_uplink_profile_name }}"
        description: "Edge Uplink Profile"
        mtu: "{{ hostvars['localhost'].edge_uplink_profile_mtu }}"
        active_list:
          - uplink-1
        policy: "FAILOVER_ORDER"
        transport_vlan: "{{ hostvars['localhost'].edge_uplink_profile_vlan }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: edge_uplink_prof

    - name: NSX-T Host Uplink Profile
      nsxt_uplink_profile:
        display_name: "{{ hostvars['localhost'].esxi_uplink_profile_name }}"
        description: "Host Uplink Profile"
        mtu: "{{ hostvars['localhost'].esxi_uplink_profile_mtu }}"
        active_list:
          - uplink-1
          - uplink-2
        policy: "LOADBALANCE_SRCID"
        transport_vlan: "{{ hostvars['localhost'].esxi_uplink_profile_vlan }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: edge_uplink_prof

    - name: NSX-T Edge Transport Node
      nsxt_transport_node:
        display_name: "{{ item }}"
        node_name: "{{ item }}"
        transport_zone_endpoints: 
          - "{{ hostvars['localhost'].overlay_tz_name }}"
          - "{{ hostvars['localhost'].edge_vlan_tz_name }}"
        host_switch:
          - name: "{{ hostvars['localhost'].hostswitch }}"
            pnics:
              uplink-1: "{{ hostvars['localhost'].edge_interface }}"
            uplink_profile: "{{ hostvars['localhost'].edge_uplink_profile_name }}"
            static_ip_pool_id: "{{ ippool.id }}"
          - name: "{{ hostvars['localhost'].vlan_hostswitch }}"
            pnics:
              uplink-1: "{{ hostvars['localhost'].edge_uplink_interface }}"
            uplink_profile: "{{ hostvars['localhost'].edge_uplink_profile_name }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      with_items: "{{ groups['nsxedges'] }}"
      register: edgetnode

    - name: NSX-T Edge Cluster
      nsxt_edge_cluster:
        display_name: "{{ hostvars['localhost'].edge_cluster }}"
        description: "Default Edge Cluster"
        members: "{{ groups['nsxedges'] }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: edge_cluster


    - name: NSX-T T0 Logical Router
      nsxt_t0_logical_router:
        display_name: "{{ hostvars['localhost'].t0_name }}"
        description: "Default T0"
        edge_cluster_id: "{{ edge_cluster.id }}"
        high_availability_mode: "{{ hostvars['localhost'].t0_ha_mode }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t0

    - name: NSX-T T1 Logical Router
      nsxt_t1_logical_router:
        display_name: "{{ hostvars['localhost'].t1_name }}"
        description: "Management T1"
        edge_cluster_id: "{{ edge_cluster.id }}"
        connected_t0_id: "{{ t0.id }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t1

    - name: NSX-T VLAN Logical Switch for t0 uplink
      nsxt_logical_switch:
        display_name: "uplink-{{ hostvars['localhost'].t0_vlan_uplink }}"
        description: "T0 Uplink VLAN Logical Switch"
        transport_zone_id: "{{ edge_vlan_tzone.id }}"
        vlan: "{{ hostvars['localhost'].t0_vlan_uplink }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: uplink_ls

    - name: NSX-T Logical Switch Port for uplink1
      nsxt_logical_switch_port:
        display_name: "to_t0_uplink1"
        description: "Logical Switch Port"
        logical_switch_id: "{{ uplink_ls.id }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: uplink_lsp

    - name: NSX-T T0 Uplink 1
      nsxt_t0_uplink:
        display_name: "uplink-1"
        description: "My Test T0 Uplink"
        edge_cluster_member: "{{ groups['nsxedges'][0] }}"
        urpf: 'NONE'
        t0_router: "{{ hostvars['localhost'].t0_name }}"
        logical_switch_port_id: "{{ uplink_lsp.id }}"
        ip_address: "{{ hostvars['localhost'].t0_ip1 }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t0uplink1

    - name: NSX-T Logical Switch Port for uplink2
      nsxt_logical_switch_port:
        display_name: "to_t0_uplink2"
        description: "Logical Switch Port"
        logical_switch_id: "{{ uplink_ls.id }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: uplink_lsp2

    - name: NSX-T T0 Uplink 2
      nsxt_t0_uplink:
        display_name: "uplink-2"
        description: "My Test T0 Uplink"
        edge_cluster_member: "{{ groups['nsxedges'][1] }}"
        urpf: 'NONE'
        t0_router: "{{ hostvars['localhost'].t0_name }}"
        logical_switch_port_id: "{{ uplink_lsp2.id }}"
        ip_address: "{{ hostvars['localhost'].t0_ip2 }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: t0uplink2

    - name: NSX-T T0 HA VIP
      nsxt_t0_ha_vip:
        vip_address: "{{ hostvars['localhost'].t0_vip}}"
        enabled: True
        t0_router: "{{ hostvars['localhost'].t0_name }}"
        redundant_uplink_port_ids:
          - "{{ t0uplink1.id }}"
          - "{{ t0uplink2.id }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: havip

    - name: NSX-T T0 Default Static route
      nsxt_static_route:
        network: '0.0.0.0/0'
        next_hops:
          - "{{ hostvars['localhost'].t0_gw }}"
        admin_distance: 1
        description: "Default Static Route"
        router_name: "{{ hostvars['localhost'].t0_name }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: stroute


    - name: NSX-T VLAN Logical Switch 1
      nsxt_logical_switch:
        display_name: "mgmt-vlan-{{ hostvars['localhost'].vlan_ls_mgmt }}"
        description: "Management VLAN Logical Switch"
        transport_zone_id: "{{ vlan_tzone.id }}"
        vlan: "{{ hostvars['localhost'].vlan_ls_mgmt }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: ls1

    - name: NSX-T VLAN Logical Switch 2
      nsxt_logical_switch:
        display_name: "vMotion-vlan-{{ hostvars['localhost'].vlan_ls_vmotion }}"
        description: "vMotion VLAN Logical Switch"
        transport_zone_id: "{{ vlan_tzone.id }}"
        vlan: "{{ hostvars['localhost'].vlan_ls_vmotion }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: ls2

    - name: NSX-T VLAN Logical Switch 3
      nsxt_logical_switch:
        display_name: "vSan-vlan-{{ hostvars['localhost'].vlan_ls_vsan }}"
        description: "vSANt VLAN Logical Switch"
        transport_zone_id: "{{ vlan_tzone.id }}"
        vlan: "{{ hostvars['localhost'].vlan_ls_mgmt }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: ls3

    - name: NSX-T Logical Switch
      nsxt_logical_switch:
        display_name: "{{ hostvars['localhost'].ls_name }}"
        description: "Management Logical Switch"
        transport_zone_id: "{{ overlay_tzone.id }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: lsswitch

    - name: NSX-T Logical Switch Port
      nsxt_logical_switch_port:
        display_name: "LSPort"
        description: "Logical Switch Port"
        logical_switch_id: "{{ lsswitch.id }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: lsp

    - name: NSX-T Logical Router Downlink Port
      nsxt_logical_router_downlink_port:
        display_name: "DwnPort"
        description: "Logical Router Downlink Port"
        logical_router_id: "{{ t1.id }}"
        linked_logical_switch_port_id: "{{ lsp.id }}"
        subnets:
           - ip_addresses: "{{ hostvars['localhost'].t1_ip }}"
             prefix_length: "{{ hostvars['localhost'].t1_mask }}"
        tags:
          ncp/cluster: "{{ hostvars['localhost'].tag }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      register: lrdp

    - name: Remove previous SSH keys from known_hosts - ESXi hosts
      command: ssh-keygen -R "{{ hostvars[item]['ansible_ssh_host'] }}"
      register: command_result
      failed_when: "command_result.rc > 0 and command_result.rc != 255"
      with_items: "{{ groups['nsxtransportnodes'] }}"
      when: groups['nsxtransportnodes'] is defined
    - name: add host to known_hosts - ESXi hosts
      shell: mkdir -p ~/.ssh; ssh-keyscan -H "{{ hostvars[item]['ansible_ssh_host'] }}" >> ~/.ssh/known_hosts
      with_items: "{{ groups['nsxtransportnodes'] }}"
      when: groups['nsxtransportnodes'] is defined

- name: Get ESX nodes information
  hosts: nsxtransportnodes
  gather_facts: True
  tasks:
    - name: Get SHA-256 SSL thumbprint
      command: openssl x509 -in /etc/vmware/ssl/rui.crt -fingerprint -sha256 -noout
      when:
        - ansible_distribution == "VMkernel"
      register: thumb
    - name: Set ssl thumbprint fact
      set_fact:
        sslthumb: "{{ thumb.stdout|regex_findall('Fingerprint=(.*)') }}"
      when:
        - ansible_distribution == "VMkernel"

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: NSX-T Fabric Node
      nsxt_fabric_node:
        display_name: "{{ item }}"
        ip_address: "{{ hostvars[item].ansible_ssh_host }}"
        node_username: "{{ hostvars[item].ansible_ssh_user }}"
        node_passwd: "{{ hostvars[item].ansible_ssh_pass }}"
        thumbprint: "{{ hostvars[item].sslthumb[0] }}"
        os_type: "ESXI"
        os_version: "6.5.0"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      with_items: "{{ groups['nsxtransportnodes'] }}"
      when: groups['nsxtransportnodes'] is defined
      register: fnode
      async: 7200
      poll: 0

    - name: Check Fabric Node Status
      async_status: jid={{ item.ansible_job_id }}
      register: job_result
      until: job_result.finished
      with_items: "{{ fnode.results }}"
      when: groups['nsxtransportnodes'] is defined
      retries: 40

    - name: NSX-T Transport Node
      nsxt_transport_node:
        display_name: "{{ item }}"
        node_name: "{{ item }}"
        transport_zone_endpoints: 
          - "{{ hostvars['localhost'].overlay_tz_name }}"
          - "{{ hostvars['localhost'].vlan_tz_name }}"
        host_switch:
          - name: "{{ hostvars['localhost'].hostswitch }}"
            static_ip_pool_id: "{{ ippool.id }}"
            pnics:
              uplink-1: "{{ hostvars[item]['uplink-1'] }}"
              uplink-2: "{{ hostvars[item]['uplink-2'] }}"
            uplink_profile: "{{ hostvars['localhost'].esxi_uplink_profile_name }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      with_items: "{{ groups['nsxtransportnodes'] }}"
      when: groups['nsxtransportnodes'] is defined
      register: tnode

    - name: NSX-T Compute Manager
      nsxt_compute_manager:
        display_name: "{{ hostvars['localhost'].compute_manager }}"
        server: "{{ hostvars['localhost'].deployVcIPAddress }}"
        username: "{{ hostvars['localhost'].deployVcUser }}"
        passwd: "{{ hostvars['localhost'].deployVcPassword }}"
        origin_type: "vCenter"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      when: hostvars['localhost'].compute_manager is defined
      register: cmp_manager

    - name: NSX-T Compute Manager Cluster
      nsxt_cm_cluster:
        display_name: "{{ hostvars['localhost'].cm_cluster }}"
        cm_name: "{{ hostvars['localhost'].compute_manager }}"
        auto_install_nsx: True
        create_transport_node: True
        transport_zone_endpoints: 
          - "{{ hostvars['localhost'].overlay_tz_name }}"
        host_switch:
          - name: "{{ hostvars['localhost'].hostswitch }}"
            static_ip_pool_id: "{{ ippool.id }}"
            pnics:
              uplink-1: "{{ hostvars['localhost']['uplink-1'] }}"
              uplink-2: "{{ hostvars['localhost']['uplink-2'] }}"
            uplink_profile: "{{ hostvars['localhost'].esxi_uplink_profile_name }}"
        state: present
        nsx_manager: "{{ hostvars['nsx-manager'].ansible_ssh_host }}"
        nsx_username: 'admin'
        nsx_passwd: "{{ hostvars['nsx-manager'].ansible_ssh_pass }}"
      when: groups['nsxtransportnodes'] is not defined
      register: cmcluster


